[manifest]
version = "1.0.0"
dump_lua = true
priority = 10000


[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/code.lua"]'
pattern = '''local f = pseudorandom_element(crashes, pseudoseed("cry_crash"))'''
position = "after"
payload = '''if next(SMODS.find_card("j_sgcry_Crash")) then f =  crashes[#crashes] end'''
match_indent = true


[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/code.lua"]'
pattern = '''and context.consumeable.ability.set == "Code"'''
position = "at"
payload = '''and (context.consumeable.ability.set == "Code" or next(SMODS.find_card("j_sgcry_codething")))'''
match_indent = true
count = 3

[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/code.lua"]'
pattern = '''G.consumeables.cards[i].ability.set == "Code"'''
position = "at"
payload = '''(G.consumeables.cards[i].ability.set == "Code" or next(SMODS.find_card("j_sgcry_codething")))'''
match_indent = true
count = 3

[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/exotic.lua"]'
pattern = '''Cryptid.with_deck_effects(G.jokers.cards[1], function(card)
					Cryptid.misprintize(card, { min = 2, max = 2 }, nil, true)
				end)'''
position = "at"
payload = '''Cryptid.with_deck_effects(G.jokers.cards[1], function(card)
					Cryptid.misprintize(card, { min = 2, max = 2 }, nil, true,"^",1)
				end)'''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "lib/misc.lua"]'
pattern = '''{ name = "colour_1", ref_table = G.C, ref_value = "CRY_EXOTIC" },
					{ name = "colour_2", ref_table = G.C, ref_value = "DARK_EDITION" },'''
position = "at"
payload = '''{ name = "colour_1", ref_table = G.C, ref_value = "SGCRY_EXTREME" },
					{ name = "colour_2", ref_table = G.C, ref_value = "DARK_EDITION" },'''
match_indent = true
count = 1


[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/epic.lua"]'
pattern = '''if G.jokers.cards[1].ability.name ~= "cry-altgoogol" then'''
position = "at"
payload = '''if G.jokers.cards[1].ability.name ~= "cry-altgoogol" and G.jokers.cards[1].config.center.rarity ~= "sgcry_extreme" then'''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''if G.jokers and G.jokers.cards then
                for k, v in ipairs(G.jokers.cards) do
                    if (v.edition and v.edition.negative) and (G.localization.descriptions.Other.remove_negative)then 
                        main_end = {}
                        localize{type = 'other', key = 'remove_negative', nodes = main_end, vars = {}}
                        main_end = main_end[1]
                        break
                    end
                end
            end '''
position = "after"
payload = '''if G.jokers and G.jokers.cards then
                for k, v in ipairs(G.jokers.cards) do
                    if (v.config.center and v.config.center.rarity == "sgcry_extreme") and (G.localization.descriptions.Other.sgcry_noext)then 
                        main_end = {}
                        localize{type = 'other', key = 'sgcry_noext', nodes = main_end, vars = {}}
                        main_end = main_end[1]
                        break
                    end
                end
            end '''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''if G.jokers and G.jokers.cards then
                for k, v in ipairs(G.jokers.cards) do
                    if (v.edition and v.edition.negative) and (G.localization.descriptions.Other.remove_negative)then 
                        info_queue[#info_queue+1] = G.P_CENTERS.e_negative
                        main_end = {}
                        localize{type = 'other', key = 'remove_negative', nodes = main_end, vars = {}}
                        main_end = main_end[1]
                        break
                    end
                end
            end'''
position = "after"
payload = '''if G.jokers and G.jokers.cards then
                for k, v in ipairs(G.jokers.cards) do
                    if (v.config.center and v.config.center.rarity == "sgcry_extreme") and (G.localization.descriptions.Other.sgcry_noext)then 
                        main_end = {}
                        localize{type = 'other', key = 'sgcry_noext', nodes = main_end, vars = {}}
                        main_end = main_end[1]
                        break
                    end
                end
            end '''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if G.jokers.cards[i] ~= self then
                        jokers[#jokers+1] = G.jokers.cards[i]
                    end'''
position = "at"
payload = '''if G.jokers.cards[i] ~= self and G.jokers.cards[i].config.center.rarity ~= "sgcry_extreme" then
                        jokers[#jokers+1] = G.jokers.cards[i]
                    end '''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''local chosen_joker = pseudorandom_element(G.jokers.cards, pseudoseed('ankh_choice'))'''
position = "at"
payload = '''
local jokers = {}
for i,v in ipairs(G.jokers.cards) do
if G.jokers.cards[i] ~= self and G.jokers.cards[i].config.center.rarity ~= "sgcry_extreme" then
    jokers[#jokers+1] = G.jokers.cards[i]
end
end
local chosen_joker = pseudorandom_element(jokers, pseudoseed('ankh_choice'))'''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if v.ability.set == 'Joker' and G.jokers.config.card_limit > 1 then '''
position = "at"
payload = '''if v.ability.set == 'Joker' and G.jokers.config.card_limit > 1 and (v.config.center.rarity ~= "sgcry_extreme") then '''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/exotic.lua"]'
pattern = '''if G.jokers.cards[i].ability.name ~= card.ability.name and G.jokers.cards[i].ability.set == "Joker" then'''
position = "at"
payload = '''if G.jokers.cards[i].ability.name ~= card.ability.name and G.jokers.cards[i].ability.set == "Joker" and G.jokers.cards[i].config.center.rarity ~= "sgcry_extreme" then'''
match_indent = true
count = 1


[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/misc_joker.lua"]'
pattern = '''if G.jokers.cards[i] ~= card and not G.jokers.cards[i].debuff then'''
position = "at"
payload = '''if G.jokers.cards[i] ~= card and G.jokers.cards[i].config.center.rarity ~= "sgcry_extreme" and not G.jokers.cards[i].debuff then'''
match_indent = true
count = 1

[[patches]]
[patches.pattern]
target = '=[SMODS Cryptid "items/spectral.lua"]'
pattern = '''local chosen_joker = pseudorandom_element(G.jokers.cards, pseudoseed("cry_analog_choice"))'''
position = "at"
payload = '''
local jokers = {}
for i,v in ipairs(G.jokers.cards) do
if G.jokers.cards[i] ~= self and G.jokers.cards[i].config.center.rarity ~= "sgcry_extreme" then
    jokers[#jokers+1] = G.jokers.cards[i]
end
end
local chosen_joker = pseudorandom_element(G.jokers.cards, pseudoseed("cry_analog_choice"))'''
match_indent = true
count = 1

